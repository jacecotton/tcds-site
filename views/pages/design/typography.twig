{# DO NOT EDIT. This file was compiled from Markdown; please edit the source .md
file and run the gulp process to compile (either `gulp` or `npm run dev` from
the terminal). #}
{% extends "@tch/base.twig" %}
{% block lede %}Good typography helps communicate ideas clearly and effectively. The Design System provides styles to establish and enforce visual hierarchy, consistency, and rhythm.{% endblock %}
{% block body %}
<!--
/**
 * @todo Document remaining variables and utilities (font weight, line height,
 *   text align, etc.)
 * @todo Document font asset location.
 * @todo Document responsive scaler.
 */
-->



<h2 id="typeface">Typeface</h2>
<p>Texas Children&#39;s fonts include the serif typeface <a href="https://fonts.adobe.com/fonts/calluna">Calluna</a> and the sans-serif typeface <a href="https://www.fontfabric.com/fonts/mont/">Mont</a>.</p>
<table class="typeface-table">
  <thead>
    <tr>
      <th>Typeface</th>
      <th>Purpose</th>
      <th>Token</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td rowspan="3"><span class="font-display font-size-x-large">Calluna</span></td>
      <td>Display text (slogans, taglines, etc.)</td>
      <td><code>display</code></td>
    </tr>
    <tr>
      <td>Heading elements (H1â€“H6)</td>
      <td><code>headings</code></td>
    </tr>
    <tr>
      <td>Body copy (paragraphs, blockquotes, lists, captions, etc.)</td>
      <td><code>copy</code></td>
    </tr>
    <tr>
      <td><span class="font-ui font-size-x-large">Mont</span></td>
      <td>Interface elements (buttons, tables, form labels, etc.)</td>
      <td><code>ui</code></td>
    </tr>
  </tbody>
</table>

<p>Tokens can be used with utility classes in HTML (<code>.font-x</code>) and custom properties in CSS <span style="white-space: nowrap">(<code>--tcds-font-x</code>)</span>, where <code>x</code> is a font token. <code>serif</code> and <code>sans-serif</code> tokens are also available.</p>
<details>
  <summary>Example</summary>


{% embed "@tch/includes/example.twig" with {
  open: true,
} %}
{% block content %}
<p class="font-sans-serif">This is sans-serif text.</p>
<p class="font-serif">This is serif text.</p>
{% endblock %}
{% endembed %}

</details>

<h2 id="type-scale">Type scale</h2>
<p>The Design System provides tokens for setting type sizes. For accessibility reasons, type is set in <code>rem</code> (see <a href="https://www.w3.org/WAI/WCAG21/Understanding/resize-text.html">WCAG 2.1 Success Criterion 1.4.4</a>), but the equivalent <code>px</code> sizes are shown below for reference.</p>

{% set typescale = {
  "x-small": "0.75",
  "small": "0.875",
  "medium": "1",
  "medium-plus": "1.125",
  "large": "1.5",
  "x-large": "2",
  "xx-large": "3",
  "xxx-large": "6",
} %}

<table class="type-scale-table">
  <tr>
    <th aria-hidden="true"></th>
    <th>Token</th>
    <th>Size <span class="visually-hidden">in rem</span></th>
    <th><span class="visually-hidden">Size in px</span></th>
  </tr>
  {% for token, size in typescale %}
    <tr>
      <td aria-hidden="true">
        <span class="font-size-{{ token }}">The quick brown fox jumps over the lazy sleeping dog</span>
      </td>
      <td><code>{{ token }}</code></td>
      <td>{{ size }}rem</td>
      <td>{{ 16 * size }}px</td>
    </tr>
  {% endfor %}
</table>


<p>Tokens can be used with utility classes in HTML (<code>.font-size-x</code>) and custom properties in CSS <span style="white-space: nowrap">(<code>--tcds-font-size-x</code>)</span>.</p>
<details>
  <summary>Example</summary>


{% embed "@tch/includes/example.twig" with {
  open: true,
} %}
{% block content %}
<p class="font-size-x-large">This is extra large text.</p>
<p class="font-size-medium">This is medium text.</p>
<p class="font-size-x-small">This is extra small text.</p>
{% endblock %}
{% endembed %}

</details>

<h2 id="headings">Headings</h2>
<p>Heading styles use the above type scale, with a combination of weight, leading, and tracking. The Design System also provides utility classes for each heading style, in order to replicate the design without the semantic meaning.</p>

{% set headings = {
  "1": {
    size: "xx-large",
    weight: "700",
    line_height: "1.2",
    letter_spacing: "-0.025em",
  },
  "2": {
    size: "x-large",
    weight: "600",
    line_height: "1.2",
    letter_spacing: "-0.0125em",
  },
  "3": {
    size: "large",
    weight: "600",
    line_height: "1.2",
    letter_spacing: "0",
  },
  "4": {
    size: "medium-plus",
    weight: "600",
    line_height: "1.6",
    letter_spacing: "0",
  },
  "5": {
    size: "medium",
    weight: "600",
    line_height: "1.6",
    letter_spacing: "0",
  },
  "6": {
    size: "small",
    weight: "600",
    line_height: "1.6",
    letter_spacing: "0",
  },
} %}

<details>
  <summary>See details</summary>

  <div style="background-color: var(--tcds-color-gray-x-light); border-radius: 10px; padding: 1px 2rem">
    {% for level, heading in headings %}
      <table class="heading-table">
        <tr>
          <td colspan="5">
            <p class="h{{ level }}">Heading {{ level }}</p>
          </td>
        </tr>
        <tr>
          <th>Size</th>
          <th>Weight</th>
          <th>Line height</th>
          <th>Letter spacing</th>
          <th>Utility class</th>
        </tr>
        <tr>
          <td>{{ heading.size }}</td>
          <td>{{ heading.weight }}</td>
          <td>{{ heading.line_height }}</td>
          <td>{{ heading.letter_spacing }}</td>
          <td><code>.h{{ level }}</code></td>
        </tr>
      </table>
    {% endfor %}
  </div>
</details>
{% endblock %}