{"version":3,"sources":["main.js","index.js","main-nav.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","toString","slice","name","from","test","arr","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","result","Super","_getPrototypeOf","NewTarget","this","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","getPrototypeOf","document","documentElement","classList","replace","MainNav","_Component","Component","_super","element","_this","toggleButtons","querySelectorAll","concat","id","window","innerWidth","threshold","state","expanded","disable","ResizeObserver","entries","_step","_iterator","contentRect","width","observe","body","forEach","toggleButton","addEventListener","event","stopPropagation","_this2","setAttribute","hidden","removeAttribute","getElementById"],"mappings":"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","file":"main.js","sourcesContent":[null,"document.documentElement.classList.replace(\"no-js\", \"js\");","/**\n * Main navigation.\n *\n * Adds functionality to expand/collapse the main nav on toggle button click, as\n * well as close the nav upon clicking outside of it. Only applies to smaller\n * screens (as specified by `props.threshold`); the functionality is disabled if\n * the screen is above the threshold.\n *\n * @param props.threshold {number} - The maximum screen size (in pixels) at\n * which the collapse/expand functionality should apply.\n */\n\nclass MainNav extends Component {\n  constructor(element, props) {\n    super(element, props);\n\n    // Get relevant DOM elements.\n    this.toggleButtons = document.querySelectorAll(`[aria-controls=${this.element.id}]`);\n\n    // Initial checking for whether the screen size is under the provided\n    // threshold. If the screen is small (mobile), we want to collapse the\n    // navigation and add toggle functionality. Otherwise, we want to expand the\n    // navigation and disable toggle functionality.\n    if(window.innerWidth <= this.props.threshold) {\n      this.state.expanded = false;\n    } else {\n      this.state.disable = true;\n    }\n\n    // Do the same check as above on every screen resize.\n    const shouldCollapseNav = new ResizeObserver(entries => {\n      for(let entry of entries) {\n        if(entry.contentRect.width <= this.props.threshold) {\n          this.state.expanded = false;\n          this.state.disable = false;\n        } else {\n          this.state.disable = true;\n        }\n      }\n    });\n    \n    // Attach resize observer to body element.\n    shouldCollapseNav.observe(document.body);\n\n    // Toggle expanded state on toggle button click.\n    this.toggleButtons.forEach((toggleButton) => {\n      toggleButton.addEventListener(\"click\", (event) => {\n        event.stopPropagation();\n        this.state.expanded = !this.state.expanded;\n      });\n    });\n\n    // Close the navigation on click outside of it.\n    document.body.addEventListener(\"click\", () => {\n      this.state.expanded = false;\n    });\n\n    // Prevent closure if the click is inside the navigation element.\n    this.element.addEventListener(\"click\", (event) => {\n      event.stopPropagation();\n    });\n  }\n\n  // Update DOM on state change.\n  sync() {\n    // Only toggle expanded state if the functionality has not been disabled.\n    if(this.state.disable !== true) {\n      // Set ARIA state on toggle buttons.\n      this.toggleButtons.forEach((toggleButton) => {\n        toggleButton.setAttribute(\"aria-expanded\", this.state.expanded);\n      });\n      \n      // Set hidden state on navigation element.\n      this.element.hidden = !this.state.expanded;\n    } else {\n      // Remove ARIA attributes from button.\n      this.toggleButtons.forEach((toggleButton) => {\n        toggleButton.removeAttribute(\"aria-controls\");\n        toggleButton.removeAttribute(\"aria-expanded\");\n      });\n\n      // Unhide the navigation.\n      this.element.hidden = false;\n    }\n  }\n}\n\nnew MainNav(document.getElementById(\"main-nav\"), {\n  threshold: 640,\n});"]}