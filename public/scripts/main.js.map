{"version":3,"sources":["main.js","external-link-new-tab.js","footnotes.js","heading-anchors.js","in-view.js","index.js","main-nav.js","no-transition-preload.js","site-header.js","toc.js","lib/prism-extension.js","lib/prism.js","pages/icon.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_inherits","subClass","superClass","TypeError","Object","create","value","writable","configurable","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","result","Super","_getPrototypeOf","NewTarget","this","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_classCallCheck","instance","Constructor","_defineProperties","target","props","i","length","descriptor","enumerable","defineProperty","key","_createClass","protoProps","staticProps","internal","RegExp","location","host","replace","document","querySelectorAll","forEach","link","destination","test","setAttribute","Footnotes","element","_this","footnotes","createDocumentFragment","footnote","id","textContent","substring","slugify","addFootnoteToList","transformReference","appendChild","item","concat","innerHTML","createRange","createContextualFragment","transformedReference","parentNode","replaceChild","querySelector","body","addEventListener","heading","anchorLink","prepend","setTimeout","dispatchEvent","CustomEvent","elements","inView","IntersectionObserver","entries","entry","isIntersecting","threshold","observe","documentElement","classList","siteHeader","scrollPosition","cookie","scrollTop","split","find","row","startsWith","scrollTo","scrollToActiveLink","unobserve","top","getBoundingClientRect","behavior","root","window","requestAnimationFrame","remove","contains","SiteHeader","_Component","Component","_super","_this2","toggle","state","expanded","innerWidth","useAnimation","newState","prevState","_this3","onanimationend","hidden","removeAttribute","getElementById","TOC","_this4","headings","Array","from","headingsOfDepthLimit","filter","parseInt","tagName","depthLimit","renderThreshold","headingTree","generateTree","renderTOC","trackHash","lastHeadingOfLevel","level","headingData","text","children","parent","push","_this5","addTOCList","branch","tocList","createElement","add","headingObject","tocItem","tocLink","href","_this6","hashChangeHandler","prevCurrentLink","currentLink","hash","block","className","indexOf","language","dataset","code","marker","childNodes","child","nodeType","trimmedChildText","fragment","_self","WorkerGlobalScope","Prism","u","c","n","M","manual","disableWorkerMessageHandler","util","encode","W","type","content","alias","isArray","map","toString","slice","objId","__id","clone","t","r","a","hasOwnProperty","getLanguage","parentElement","match","toLowerCase","currentScript","Error","exec","stack","getElementsByTagName","src","isActive","languages","plain","plaintext","txt","extend","insertBefore","l","s","DFS","plugins","highlightAll","highlightAllUnder","callback","container","selector","hooks","run","highlightElement","nodeName","grammar","highlightedCode","hasAttribute","Worker","filename","onmessage","data","postMessage","JSON","stringify","immediateClose","highlight","tokens","tokenize","rest","I","head","cause","g","inside","f","lookbehind","h","greedy","d","pattern","global","source","v","m","next","y","tail","reach","b","k","x","z","w","index","A","P","E","S","O","L","N","j","prev","q","_","all","Token","lastIndex","tag","classes","attributes","join","parse","close","readyState","defer","module","exports","markup","comment","prolog","doctype","string","punctuation","name","cdata","namespace","entity","title","html","mathml","svg","xml","ssml","atom","rss","css","atrule","rule","keyword","url","function","property","important","addInlined","addAttribute","clike","boolean","number","operator","javascript","regex","parameter","constant","hashbang","interpolation","js","batch","label","command","variable","twig","ld","rd","other","style","fontSize","lineHeight","padding","border","offsetHeight","removeChild","clearTimeout","lineNumbers","getAttribute","parseFloat","getComputedStyle","substr","offsetTop","borderTopWidth","paddingTop","getLine","height","String","width","scrollWidth","onclick","lastIndexOf","scrollIntoView","resize","assumeViewportIndependence","counterReset","currentStyle","display","lines","lineHeights","oneLinerHeight","sizer","labelText","onmouseenter","onmouseleave","navigator","clipboard","writeText","svgSnippet","then"],"mappings":"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","file":"main.js","sourcesContent":[null,"/**\n * Open external links in new tabs.\n */\n (function() {\n  // Create a test for what counts as \"internal\".\n  const internal = new RegExp(location.host.replace(\"www.\", \"\"), \"i\");\n\n  // Get all links.\n  const links = document.querySelectorAll(\"a\");\n\n  links.forEach((link) => {\n    // Determine the host of the link.\n    const destination = link.host;\n\n    // Determine whether it matches our \"internal\" test.\n    if(!internal.test(destination)) {\n      \n      // If not, open in new tab.\n      link.setAttribute(\"target\", \"_blank\");\n      // Other attributes for cross-site security.\n      link.setAttribute(\"rel\", \"noopener noreferrer\");\n    }\n  });\n}());","class Footnotes {\n  constructor(element) {\n    // The spot in the DOM to generate and add an ordered list of footnotes.\n    this.element = element;\n\n    if(this.element) {\n      // Create an empty fragment to start.\n      this.footnotes = document.createDocumentFragment();\n\n      // Get all footnote refs in the document.\n      document.querySelectorAll(\"[data-footnote]\").forEach((footnote) => {\n        // Generate a unique ID for the footnote by truncating the content to\n        // 20 characters and then transforming it into a slug (lowercase, spaces\n        // replaced with hyphens, special characters removed).\n        const id = footnote.textContent.substring(0, 20).slugify();\n\n        // Add the footnote to the `footnotes` list fragment.\n        this.addFootnoteToList(footnote, id);\n        // Replace the initial inline footnote with a bracketed number\n        // referencing the footnote now in the list.\n        this.transformReference(footnote, id);\n      });\n\n      // Add the generated list to the specified spot in the DOM.\n      this.element.appendChild(this.footnotes);\n    }\n  }\n\n  // Generate a list item from inline footnote, then add it to the `footnotes`\n  // list fragment.\n  addFootnoteToList(footnote, id) {\n    const item = `\n      <li class=\"Footnotes__item\" role=\"doc-footnote\">\n        <span id=\"fn-${id}\">\n          ${footnote.innerHTML}\n\n          <a href=\"#ref-${id}\" title=\"Return to reference\">\n            <span class=\"visually-hidden\">Return to reference</span>\n            <span aria-hidden=\"true\">⤴️</span>\n          </a>\n        </span>\n      </li>\n    `;\n\n    this.footnotes.appendChild(document.createRange().createContextualFragment(item));\n  }\n\n  // Transform the original inline footnote into a linked reference (bracketed\n  // number). This number is incremented via CSS `counter`, so we don't need to\n  // generate it here.\n  transformReference(footnote, id) {\n    const transformedReference = `<a href=\"#fn-${id}\" class=\"Footnote-ref\" id=\"ref-${id}\" aria-describedby=\"fn-${id}\" role=\"doc-noteref\" title=\"Go to footnote\"><span class=\"visually-hidden\">reference to footnote</span></a>`;\n\n    footnote.parentNode.replaceChild(document.createRange().createContextualFragment(transformedReference), footnote);\n  }\n}\n\nnew Footnotes(document.querySelector(\"[data-component=Footnotes]\"));","document.body.addEventListener(\"toc:render\", () => {\n  const mainContent = document.querySelector(\"main\");\n  const sectionHeadings = mainContent.querySelectorAll(\":is(h2, h3, h4, h5, h6):not([class])\");\n\n  sectionHeadings.forEach((heading) => {\n    const anchorLink = `<a href=\"#${heading.id}\" class=\"heading-anchor\" title=\"Anchor to this section\">&sect;</a>`;\n    heading.prepend(document.createRange().createContextualFragment(anchorLink));\n    heading.setAttribute(\"data-anchored\", true);\n  });\n});\n\nsetTimeout(() => {\n  document.body.dispatchEvent(new CustomEvent(\"toc:render\"));\n}, 1000);","(function() {\n  const elements = document.querySelectorAll(\"[data-in-viewport]\");\n\n  const inView = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      if(entry.isIntersecting) {\n        entry.target.setAttribute(\"data-in-viewport\", \"true\");\n      }\n    });\n  }, {\n    threshold: .7,\n  });\n\n  elements && elements.forEach((element) => {\n    inView.observe(element);\n  });\n}());","document.documentElement.classList.replace(\"no-js\", \"js\");","/**\n * Global nav functionality.\n *\n * First goal is to detect the last scroll position of the nav, store that as a\n * cookie, then when navigating to a new page, scroll to that position.\n *\n * Additionally, if the current page isn't within the global nav's scroll\n * window, smooth scroll to it.\n */\n(function() {\n  // Get global nav.\n  const siteHeader = document.querySelector(\".site-header\");\n  // Initialize scroll position variable (will be populated from cookie on\n  // repeat views).\n  let scrollPosition = null;\n\n  // When the user scrolls, store the position as a cookie.\n  siteHeader.addEventListener(\"scroll\", () => {\n    document.cookie = `siteHeaderScroll=${siteHeader.scrollTop}; path=/`;\n  });\n  \n  // If the cookie exists on page load...\n  if(document.cookie) {\n    // Get the position.\n    scrollPosition = document.cookie.split(\"; \").find((row) => row.startsWith(\"siteHeaderScroll=\")).split(\"=\")[1];\n  }\n\n  // If we have a position, scroll to it.\n  if(scrollPosition) {\n    siteHeader.scrollTo(0, scrollPosition);\n  }\n\n  // If the active link is not within the scroll viewport (above or below),\n  // scroll to it regardless of the previously stored position.\n  const scrollToActiveLink = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      if(!entry.isIntersecting) {\n        setTimeout(() => {\n          // Smooth scroll to active link (with offset to account for logo\n          // height).\n          siteHeader.scrollTo({\n            top: entry.target.getBoundingClientRect().top - 175,\n            behavior: \"smooth\",\n          });\n\n          // Unobserve the link once it's been scrolled to, so that it doesn't\n          // scroll back to it after the user starts scrolling.\n          scrollToActiveLink.unobserve(entry.target);\n        }, 300);\n      } else {\n        // Also unobserve the link if it was visible/intersecting to start with.\n        scrollToActiveLink.unobserve(entry.target);\n      }\n    });\n  }, {\n    // Observe relative to the site header.\n    root: siteHeader,\n    // Lower the threshold a bit because of the scroll gradient at the bottom\n    // covering elements that would otherwise be visible at a 1.0 threshold.\n    threshold: .5,\n  });\n\n  // Observe the active link only.\n  scrollToActiveLink.observe(document.querySelector(\".site-header [aria-current]\"));\n}());","window.addEventListener(\"load\", () => {\n  requestAnimationFrame(() => {\n    document.body.classList.remove(\"preload\");\n  });\n\n  setTimeout(() => {\n    if(document.body.classList.contains(\"preload\")) {\n      document.body.classList.remove(\"preload\");\n    }\n  }, 1000);\n});","class SiteHeader extends Component {\n  constructor(element, props) {\n    super(element, props);\n\n    this.toggle = document.querySelector(`[aria-controls=${this.element.id}]`);\n\n    this.state.expanded = window.innerWidth >= this.props.threshold;\n\n    // Toggle the header on toggle button click.\n    this.toggle.addEventListener(\"click\", () => {\n      this.state.expanded = !this.state.expanded;\n      this.state.useAnimation = true;\n    });\n  }\n\n  sync(newState, prevState) {\n    if(\"expanded\" in newState) {\n      this.toggle.setAttribute(\"aria-expanded\", this.state.expanded);\n\n      if(this.state.useAnimation === true) {\n        this.element.setAttribute(\"data-use-animation\", true);\n        \n        if(this.state.expanded === true) {\n          this.element.onanimationend = null;\n          this.element.hidden = false;\n        } else {\n          this.element.setAttribute(\"data-transition\", \"closing\");\n\n          this.element.onanimationend = () => {\n            this.element.removeAttribute(\"data-transition\");\n            this.element.hidden = true;\n          };\n        }\n      } else {\n        this.element.hidden = !this.state.expanded;\n      }\n    }\n  }\n}\n\nwindow.addEventListener(\"load\", () => {\n  new SiteHeader(document.getElementById(\"site-header\"), {\n    threshold: 1000,\n  });\n});","/**\n * Generates a table of contents (TOC) from headings in a document.\n *\n * This script assumes two important things:\n * 1. The headings already have unique IDs.\n * 2. The headings follow a proper order, not skipping any heading levels.\n *\n * @param {object} options Configuration options for the TOC.\n * @param {number} [options.renderThreshold=4] The minimum amount of headings\n * there must be in the document for the TOC to render.\n * @param {number} [options.depthLimit=4] The maximum heading level to display\n * in the TOC.\n */\n\nclass TOC {\n  constructor(element, props) {\n    this.element = element;\n    this.props = props;\n\n    this.headings = Array.from(document.querySelectorAll(\"h2, h3, h4, h5, h6\"));\n\n    this.headingsOfDepthLimit = this.headings.filter((heading) => {\n      return parseInt(heading.tagName.substring(1)) <= this.props.depthLimit;\n    });\n    \n    if(this.headingsOfDepthLimit.length >= this.props.renderThreshold) {\n      this.headingTree = this.generateTree();\n      this.renderTOC();\n      this.trackHash();\n    }\n  }\n\n  generateTree() {\n    const headingTree = [];\n    const lastHeadingOfLevel = {};\n\n    this.headings.forEach((heading) => {\n      const level = parseInt(heading.tagName.substring(1));\n\n      const headingData = {\n        level: level,\n        id: heading.id,\n        text: heading.textContent,\n        children: [],\n      };\n\n      const parent = (level > 2) ? lastHeadingOfLevel[level - 1].children : headingTree;\n\n      lastHeadingOfLevel[level] = headingData;\n\n      parent.push(headingData);\n    });\n\n    return headingTree;\n  }\n\n  renderTOC() {\n    const addTOCList = (branch, parent) => {\n      const tocList = document.createElement(\"ol\");\n      tocList.classList.add(\"TOC__list\");\n\n      branch.forEach((headingObject) => {\n        const tocItem = document.createElement(\"li\");\n        tocItem.classList.add(\"TOC__item\");\n\n        const tocLink = document.createElement(\"a\");\n        tocLink.classList.add(\"TOC__link\");\n        tocLink.href = `#${headingObject.id}`;\n        tocLink.textContent = headingObject.text;\n\n        tocItem.appendChild(tocLink);\n        tocList.appendChild(tocItem);\n\n        if(headingObject.children.length > 0 && headingObject.level < this.props.depthLimit) {\n          addTOCList(headingObject.children, tocItem);\n        }\n      });\n\n      parent.appendChild(tocList);\n    };\n\n    addTOCList(this.headingTree, this.element);\n\n    document.body.dispatchEvent(new CustomEvent(\"toc:render\", {}));\n  }\n\n  trackHash() {\n    const hashChangeHandler = () => {\n      const prevCurrentLink = this.element.querySelector(\"[aria-current=true]\");\n      const currentLink = this.element.querySelector(`a[href=\"${window.location.hash}\"]`);\n\n      if(prevCurrentLink) {\n        prevCurrentLink.removeAttribute(\"aria-current\");\n      }\n\n      if(currentLink) {\n        currentLink.setAttribute(\"aria-current\", \"true\");\n      }\n    };\n\n    hashChangeHandler();\n    window.addEventListener(\"hashchange\", hashChangeHandler);\n  }\n}","window.setTimeout(function() {\n  const prismBlocks = document.querySelectorAll(\"pre\");\n  \n  prismBlocks.forEach((block) => {\n    block.classList.forEach((className) => {\n      if(className.indexOf(\"language-\") > -1) {\n        const language = className.substring(className.indexOf(\"language-\") + \"language-\".length);\n        block.dataset.language = language;\n\n        if(language === \"terminal\") {\n          const code = block.querySelector(\"code\");\n          const marker = `<span class=\"line-marker\">$ </span>`;\n          \n          code.childNodes.forEach((child) => {\n            if(child.nodeType === 3) {\n              // Remove final newline.\n              let trimmedChildText = child.textContent.replace(/\\n+$/g, \"\");\n              // Insert marker after all other newlines.\n              trimmedChildText = trimmedChildText.replace(/\\n/g, `\\n${marker}`);\n              // Add marker to first line.\n              trimmedChildText = marker + trimmedChildText;\n\n              // Create a node to place each line.\n              const fragment = document.createElement(\"span\");\n              // Insert line into node.\n              fragment.innerHTML = trimmedChildText;\n\n              // Replace previous text with new line.\n              code.replaceChild(fragment, child);\n            }\n          });\n        }\n      }\n    });\n  });\n}, 100);","/* PrismJS 1.24.1\nhttps://prismjs.com/download.html#themes=prism&languages=markup+css+clike+javascript+batch+twig&plugins=line-highlight+line-numbers */\nvar _self=\"undefined\"!=typeof window?window:\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(u){var c=/\\blang(?:uage)?-([\\w-]+)\\b/i,n=0,e={},M={manual:u.Prism&&u.Prism.manual,disableWorkerMessageHandler:u.Prism&&u.Prism.disableWorkerMessageHandler,util:{encode:function e(n){return n instanceof W?new W(n.type,e(n.content),n.alias):Array.isArray(n)?n.map(e):n.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++n}),e.__id},clone:function t(e,r){var a,n;switch(r=r||{},M.util.type(e)){case\"Object\":if(n=M.util.objId(e),r[n])return r[n];for(var i in a={},r[n]=a,e)e.hasOwnProperty(i)&&(a[i]=t(e[i],r));return a;case\"Array\":return n=M.util.objId(e),r[n]?r[n]:(a=[],r[n]=a,e.forEach(function(e,n){a[n]=t(e,r)}),a);default:return e}},getLanguage:function(e){for(;e&&!c.test(e.className);)e=e.parentElement;return e?(e.className.match(c)||[,\"none\"])[1].toLowerCase():\"none\"},currentScript:function(){if(\"undefined\"==typeof document)return null;if(\"currentScript\"in document)return document.currentScript;try{throw new Error}catch(e){var n=(/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(e.stack)||[])[1];if(n){var t=document.getElementsByTagName(\"script\");for(var r in t)if(t[r].src==n)return t[r]}return null}},isActive:function(e,n,t){for(var r=\"no-\"+n;e;){var a=e.classList;if(a.contains(n))return!0;if(a.contains(r))return!1;e=e.parentElement}return!!t}},languages:{plain:e,plaintext:e,text:e,txt:e,extend:function(e,n){var t=M.util.clone(M.languages[e]);for(var r in n)t[r]=n[r];return t},insertBefore:function(t,e,n,r){var a=(r=r||M.languages)[t],i={};for(var l in a)if(a.hasOwnProperty(l)){if(l==e)for(var o in n)n.hasOwnProperty(o)&&(i[o]=n[o]);n.hasOwnProperty(l)||(i[l]=a[l])}var s=r[t];return r[t]=i,M.languages.DFS(M.languages,function(e,n){n===s&&e!=t&&(this[e]=i)}),i},DFS:function e(n,t,r,a){a=a||{};var i=M.util.objId;for(var l in n)if(n.hasOwnProperty(l)){t.call(n,l,n[l],r||l);var o=n[l],s=M.util.type(o);\"Object\"!==s||a[i(o)]?\"Array\"!==s||a[i(o)]||(a[i(o)]=!0,e(o,t,l,a)):(a[i(o)]=!0,e(o,t,null,a))}}},plugins:{},highlightAll:function(e,n){M.highlightAllUnder(document,e,n)},highlightAllUnder:function(e,n,t){var r={callback:t,container:e,selector:'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'};M.hooks.run(\"before-highlightall\",r),r.elements=Array.prototype.slice.apply(r.container.querySelectorAll(r.selector)),M.hooks.run(\"before-all-elements-highlight\",r);for(var a,i=0;a=r.elements[i++];)M.highlightElement(a,!0===n,r.callback)},highlightElement:function(e,n,t){var r=M.util.getLanguage(e),a=M.languages[r];e.className=e.className.replace(c,\"\").replace(/\\s+/g,\" \")+\" language-\"+r;var i=e.parentElement;i&&\"pre\"===i.nodeName.toLowerCase()&&(i.className=i.className.replace(c,\"\").replace(/\\s+/g,\" \")+\" language-\"+r);var l={element:e,language:r,grammar:a,code:e.textContent};function o(e){l.highlightedCode=e,M.hooks.run(\"before-insert\",l),l.element.innerHTML=l.highlightedCode,M.hooks.run(\"after-highlight\",l),M.hooks.run(\"complete\",l),t&&t.call(l.element)}if(M.hooks.run(\"before-sanity-check\",l),(i=l.element.parentElement)&&\"pre\"===i.nodeName.toLowerCase()&&!i.hasAttribute(\"tabindex\")&&i.setAttribute(\"tabindex\",\"0\"),!l.code)return M.hooks.run(\"complete\",l),void(t&&t.call(l.element));if(M.hooks.run(\"before-highlight\",l),l.grammar)if(n&&u.Worker){var s=new Worker(M.filename);s.onmessage=function(e){o(e.data)},s.postMessage(JSON.stringify({language:l.language,code:l.code,immediateClose:!0}))}else o(M.highlight(l.code,l.grammar,l.language));else o(M.util.encode(l.code))},highlight:function(e,n,t){var r={code:e,grammar:n,language:t};return M.hooks.run(\"before-tokenize\",r),r.tokens=M.tokenize(r.code,r.grammar),M.hooks.run(\"after-tokenize\",r),W.stringify(M.util.encode(r.tokens),r.language)},tokenize:function(e,n){var t=n.rest;if(t){for(var r in t)n[r]=t[r];delete n.rest}var a=new i;return I(a,a.head,e),function e(n,t,r,a,i,l){for(var o in r)if(r.hasOwnProperty(o)&&r[o]){var s=r[o];s=Array.isArray(s)?s:[s];for(var u=0;u<s.length;++u){if(l&&l.cause==o+\",\"+u)return;var c=s[u],g=c.inside,f=!!c.lookbehind,h=!!c.greedy,d=c.alias;if(h&&!c.pattern.global){var p=c.pattern.toString().match(/[imsuy]*$/)[0];c.pattern=RegExp(c.pattern.source,p+\"g\")}for(var v=c.pattern||c,m=a.next,y=i;m!==t.tail&&!(l&&y>=l.reach);y+=m.value.length,m=m.next){var b=m.value;if(t.length>n.length)return;if(!(b instanceof W)){var k,x=1;if(h){if(!(k=z(v,y,n,f)))break;var w=k.index,A=k.index+k[0].length,P=y;for(P+=m.value.length;P<=w;)m=m.next,P+=m.value.length;if(P-=m.value.length,y=P,m.value instanceof W)continue;for(var E=m;E!==t.tail&&(P<A||\"string\"==typeof E.value);E=E.next)x++,P+=E.value.length;x--,b=n.slice(y,P),k.index-=y}else if(!(k=z(v,0,b,f)))continue;var w=k.index,S=k[0],O=b.slice(0,w),L=b.slice(w+S.length),N=y+b.length;l&&N>l.reach&&(l.reach=N);var j=m.prev;O&&(j=I(t,j,O),y+=O.length),q(t,j,x);var C=new W(o,g?M.tokenize(S,g):S,d,S);if(m=I(t,j,C),L&&I(t,m,L),1<x){var _={cause:o+\",\"+u,reach:N};e(n,t,r,m.prev,y,_),l&&_.reach>l.reach&&(l.reach=_.reach)}}}}}}(e,a,n,a.head,0),function(e){var n=[],t=e.head.next;for(;t!==e.tail;)n.push(t.value),t=t.next;return n}(a)},hooks:{all:{},add:function(e,n){var t=M.hooks.all;t[e]=t[e]||[],t[e].push(n)},run:function(e,n){var t=M.hooks.all[e];if(t&&t.length)for(var r,a=0;r=t[a++];)r(n)}},Token:W};function W(e,n,t,r){this.type=e,this.content=n,this.alias=t,this.length=0|(r||\"\").length}function z(e,n,t,r){e.lastIndex=n;var a=e.exec(t);if(a&&r&&a[1]){var i=a[1].length;a.index+=i,a[0]=a[0].slice(i)}return a}function i(){var e={value:null,prev:null,next:null},n={value:null,prev:e,next:null};e.next=n,this.head=e,this.tail=n,this.length=0}function I(e,n,t){var r=n.next,a={value:t,prev:n,next:r};return n.next=a,r.prev=a,e.length++,a}function q(e,n,t){for(var r=n.next,a=0;a<t&&r!==e.tail;a++)r=r.next;(n.next=r).prev=n,e.length-=a}if(u.Prism=M,W.stringify=function n(e,t){if(\"string\"==typeof e)return e;if(Array.isArray(e)){var r=\"\";return e.forEach(function(e){r+=n(e,t)}),r}var a={type:e.type,content:n(e.content,t),tag:\"span\",classes:[\"token\",e.type],attributes:{},language:t},i=e.alias;i&&(Array.isArray(i)?Array.prototype.push.apply(a.classes,i):a.classes.push(i)),M.hooks.run(\"wrap\",a);var l=\"\";for(var o in a.attributes)l+=\" \"+o+'=\"'+(a.attributes[o]||\"\").replace(/\"/g,\"&quot;\")+'\"';return\"<\"+a.tag+' class=\"'+a.classes.join(\" \")+'\"'+l+\">\"+a.content+\"</\"+a.tag+\">\"},!u.document)return u.addEventListener&&(M.disableWorkerMessageHandler||u.addEventListener(\"message\",function(e){var n=JSON.parse(e.data),t=n.language,r=n.code,a=n.immediateClose;u.postMessage(M.highlight(r,M.languages[t],t)),a&&u.close()},!1)),M;var t=M.util.currentScript();function r(){M.manual||M.highlightAll()}if(t&&(M.filename=t.src,t.hasAttribute(\"data-manual\")&&(M.manual=!0)),!M.manual){var a=document.readyState;\"loading\"===a||\"interactive\"===a&&t&&t.defer?document.addEventListener(\"DOMContentLoaded\",r):window.requestAnimationFrame?window.requestAnimationFrame(r):window.setTimeout(r,16)}return M}(_self);\"undefined\"!=typeof module&&module.exports&&(module.exports=Prism),\"undefined\"!=typeof global&&(global.Prism=Prism);\nPrism.languages.markup={comment:/<!--[\\s\\S]*?-->/,prolog:/<\\?[\\s\\S]+?\\?>/,doctype:{pattern:/<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,greedy:!0,inside:{\"internal-subset\":{pattern:/(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/\"[^\"]*\"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\\]]/,\"doctype-tag\":/^DOCTYPE/,name:/[^\\s<>'\"]+/}},cdata:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,tag:{pattern:/<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,greedy:!0,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},\"special-attr\":[],\"attr-value\":{pattern:/=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:\"attr-equals\"},/\"|'/]}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:[{pattern:/&[\\da-z]{1,8};/i,alias:\"named-entity\"},/&#x?[\\da-f]{1,8};/i]},Prism.languages.markup.tag.inside[\"attr-value\"].inside.entity=Prism.languages.markup.entity,Prism.languages.markup.doctype.inside[\"internal-subset\"].inside=Prism.languages.markup,Prism.hooks.add(\"wrap\",function(a){\"entity\"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,\"&\"))}),Object.defineProperty(Prism.languages.markup.tag,\"addInlined\",{value:function(a,e){var s={};s[\"language-\"+e]={pattern:/(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,lookbehind:!0,inside:Prism.languages[e]},s.cdata=/^<!\\[CDATA\\[|\\]\\]>$/i;var t={\"included-cdata\":{pattern:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,inside:s}};t[\"language-\"+e]={pattern:/[\\s\\S]+/,inside:Prism.languages[e]};var n={};n[a]={pattern:RegExp(\"(<__[^>]*>)(?:<!\\\\[CDATA\\\\[(?:[^\\\\]]|\\\\](?!\\\\]>))*\\\\]\\\\]>|(?!<!\\\\[CDATA\\\\[)[^])*?(?=</__>)\".replace(/__/g,function(){return a}),\"i\"),lookbehind:!0,greedy:!0,inside:t},Prism.languages.insertBefore(\"markup\",\"cdata\",n)}}),Object.defineProperty(Prism.languages.markup.tag,\"addAttribute\",{value:function(a,e){Prism.languages.markup.tag.inside[\"special-attr\"].push({pattern:RegExp(\"(^|[\\\"'\\\\s])(?:\"+a+\")\\\\s*=\\\\s*(?:\\\"[^\\\"]*\\\"|'[^']*'|[^\\\\s'\\\">=]+(?=[\\\\s>]))\",\"i\"),lookbehind:!0,inside:{\"attr-name\":/^[^\\s=]+/,\"attr-value\":{pattern:/=[\\s\\S]+/,inside:{value:{pattern:/(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,lookbehind:!0,alias:[e,\"language-\"+e],inside:Prism.languages[e]},punctuation:[{pattern:/^=/,alias:\"attr-equals\"},/\"|'/]}}}})}}),Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup,Prism.languages.xml=Prism.languages.extend(\"markup\",{}),Prism.languages.ssml=Prism.languages.xml,Prism.languages.atom=Prism.languages.xml,Prism.languages.rss=Prism.languages.xml;\n!function(s){var e=/(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;s.languages.css={comment:/\\/\\*[\\s\\S]*?\\*\\//,atrule:{pattern:/@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,inside:{rule:/^@[\\w-]+/,\"selector-function-argument\":{pattern:/(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,lookbehind:!0,alias:\"selector\"},keyword:{pattern:/(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,lookbehind:!0}}},url:{pattern:RegExp(\"\\\\burl\\\\((?:\"+e.source+\"|(?:[^\\\\\\\\\\r\\n()\\\"']|\\\\\\\\[^])*)\\\\)\",\"i\"),greedy:!0,inside:{function:/^url/i,punctuation:/^\\(|\\)$/,string:{pattern:RegExp(\"^\"+e.source+\"$\"),alias:\"url\"}}},selector:{pattern:RegExp(\"(^|[{}\\\\s])[^{}\\\\s](?:[^{};\\\"'\\\\s]|\\\\s+(?![\\\\s{])|\"+e.source+\")*(?=\\\\s*\\\\{)\"),lookbehind:!0},string:{pattern:e,greedy:!0},property:{pattern:/(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,lookbehind:!0},important:/!important\\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,lookbehind:!0},punctuation:/[(){};:,]/},s.languages.css.atrule.inside.rest=s.languages.css;var t=s.languages.markup;t&&(t.tag.addInlined(\"style\",\"css\"),t.tag.addAttribute(\"style\",\"css\"))}(Prism);\nPrism.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,boolean:/\\b(?:true|false)\\b/,function:/\\b\\w+(?=\\()/,number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,punctuation:/[{}[\\];(),.:]/};\nPrism.languages.javascript=Prism.languages.extend(\"clike\",{\"class-name\":[Prism.languages.clike[\"class-name\"],{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\\})\\s*)catch\\b/,lookbehind:!0},{pattern:/(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,lookbehind:!0}],function:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,number:/\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,operator:/--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/}),Prism.languages.javascript[\"class-name\"][0].pattern=/(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/,Prism.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,lookbehind:!0,greedy:!0,inside:{\"regex-source\":{pattern:/^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,lookbehind:!0,alias:\"language-regex\",inside:Prism.languages.regex},\"regex-delimiter\":/^\\/|\\/$/,\"regex-flags\":/^[a-z]+$/}},\"function-variable\":{pattern:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,alias:\"function\"},parameter:[{pattern:/(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,lookbehind:!0,inside:Prism.languages.javascript}],constant:/\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/}),Prism.languages.insertBefore(\"javascript\",\"string\",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:\"comment\"},\"template-string\":{pattern:/`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,greedy:!0,inside:{\"template-punctuation\":{pattern:/^`|`$/,alias:\"string\"},interpolation:{pattern:/((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:Prism.languages.javascript}},string:/[\\s\\S]+/}}}),Prism.languages.markup&&(Prism.languages.markup.tag.addInlined(\"script\",\"javascript\"),Prism.languages.markup.tag.addAttribute(\"on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)\",\"javascript\")),Prism.languages.js=Prism.languages.javascript;\n!function(e){var r=/%%?[~:\\w]+%?|!\\S+!/,t={pattern:/\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,alias:\"attr-name\",inside:{punctuation:/:/}},n=/\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/,i=/(?:\\b|-)\\d+\\b/;Prism.languages.batch={comment:[/^::.*/m,{pattern:/((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0}],label:{pattern:/^:.*/m,alias:\"property\"},command:[{pattern:/((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,lookbehind:!0,inside:{keyword:/^for\\b|\\b(?:in|do)\\b/i,string:n,parameter:t,variable:r,number:i,punctuation:/[()',]/}},{pattern:/((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,lookbehind:!0,inside:{keyword:/^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,string:n,parameter:t,variable:r,number:i,operator:/\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i}},{pattern:/((?:^|[&()])[ \\t]*)else\\b/im,lookbehind:!0,inside:{keyword:/^else\\b/i}},{pattern:/((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,inside:{keyword:/^set\\b/i,string:n,parameter:t,variable:[r,/\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],number:i,operator:/[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,punctuation:/[()',]/}},{pattern:/((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,inside:{keyword:/^\\w+\\b/i,string:n,parameter:t,label:{pattern:/(^\\s*):\\S+/m,lookbehind:!0,alias:\"property\"},variable:r,number:i,operator:/\\^/}}],operator:/[&@]/,punctuation:/[()']/}}();\nPrism.languages.twig={comment:/\\{#[\\s\\S]*?#\\}/,tag:{pattern:/\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,inside:{ld:{pattern:/^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,inside:{punctuation:/^(?:\\{\\{|\\{%)-?/,keyword:/\\w+/}},rd:{pattern:/-?(?:%\\}|\\}\\})$/,inside:{punctuation:/.+/}},string:{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,inside:{punctuation:/^['\"]|['\"]$/}},keyword:/\\b(?:even|if|odd)\\b/,boolean:/\\b(?:true|false|null)\\b/,number:/\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,operator:[{pattern:/(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,lookbehind:!0},/[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],property:/\\b[a-zA-Z_]\\w*\\b/,punctuation:/[()\\[\\]{}:.,]/}},other:{pattern:/\\S(?:[\\s\\S]*\\S)?/,inside:Prism.languages.markup}};\n!function(){if(\"undefined\"!=typeof Prism&&\"undefined\"!=typeof document&&document.querySelector){var t,o=\"line-numbers\",s=\"linkable-line-numbers\",a=function(){if(void 0===t){var e=document.createElement(\"div\");e.style.fontSize=\"13px\",e.style.lineHeight=\"1.5\",e.style.padding=\"0\",e.style.border=\"0\",e.innerHTML=\"&nbsp;<br />&nbsp;\",document.body.appendChild(e),t=38===e.offsetHeight,document.body.removeChild(e)}return t},l=!0,u=0;Prism.hooks.add(\"before-sanity-check\",function(e){var t=e.element.parentElement;if(c(t)){var n=0;v(\".line-highlight\",t).forEach(function(e){n+=e.textContent.length,e.parentNode.removeChild(e)}),n&&/^(?: \\n)+$/.test(e.code.slice(-n))&&(e.code=e.code.slice(0,-n))}}),Prism.hooks.add(\"complete\",function e(t){var n=t.element.parentElement;if(c(n)){clearTimeout(u);var i=Prism.plugins.lineNumbers,r=t.plugins&&t.plugins.lineNumbers;if(y(n,o)&&i&&!r)Prism.hooks.add(\"line-numbers\",e);else d(n)(),u=setTimeout(f,1)}}),window.addEventListener(\"hashchange\",f),window.addEventListener(\"resize\",function(){v(\"pre\").filter(c).map(function(e){return d(e)}).forEach(b)})}function v(e,t){return Array.prototype.slice.call((t||document).querySelectorAll(e))}function y(e,t){return e.classList.contains(t)}function b(e){e()}function c(e){return!(!e||!/pre/i.test(e.nodeName))&&(!!e.hasAttribute(\"data-line\")||!(!e.id||!Prism.util.isActive(e,s)))}function d(u,e,c){var t=(e=\"string\"==typeof e?e:u.getAttribute(\"data-line\")||\"\").replace(/\\s+/g,\"\").split(\",\").filter(Boolean),d=+u.getAttribute(\"data-line-offset\")||0,f=(a()?parseInt:parseFloat)(getComputedStyle(u).lineHeight),p=Prism.util.isActive(u,o),n=u.querySelector(\"code\"),h=p?u:n||u,m=[],g=n&&h!=n?function(e,t){var n=getComputedStyle(e),i=getComputedStyle(t);function r(e){return+e.substr(0,e.length-2)}return t.offsetTop+r(i.borderTopWidth)+r(i.paddingTop)-r(n.paddingTop)}(u,n):0;t.forEach(function(e){var t=e.split(\"-\"),n=+t[0],i=+t[1]||n,r=u.querySelector('.line-highlight[data-range=\"'+e+'\"]')||document.createElement(\"div\");if(m.push(function(){r.setAttribute(\"aria-hidden\",\"true\"),r.setAttribute(\"data-range\",e),r.className=(c||\"\")+\" line-highlight\"}),p&&Prism.plugins.lineNumbers){var o=Prism.plugins.lineNumbers.getLine(u,n),s=Prism.plugins.lineNumbers.getLine(u,i);if(o){var a=o.offsetTop+g+\"px\";m.push(function(){r.style.top=a})}if(s){var l=s.offsetTop-o.offsetTop+s.offsetHeight+\"px\";m.push(function(){r.style.height=l})}}else m.push(function(){r.setAttribute(\"data-start\",String(n)),n<i&&r.setAttribute(\"data-end\",String(i)),r.style.top=(n-d-1)*f+g+\"px\",r.textContent=new Array(i-n+2).join(\" \\n\")});m.push(function(){r.style.width=u.scrollWidth+\"px\"}),m.push(function(){h.appendChild(r)})});var i=u.id;if(p&&Prism.util.isActive(u,s)&&i){y(u,s)||m.push(function(){u.classList.add(s)});var r=parseInt(u.getAttribute(\"data-start\")||\"1\");v(\".line-numbers-rows > span\",u).forEach(function(e,t){var n=t+r;e.onclick=function(){var e=i+\".\"+n;l=!1,location.hash=e,setTimeout(function(){l=!0},1)}})}return function(){m.forEach(b)}}function f(){var e=location.hash.slice(1);v(\".temporary.line-highlight\").forEach(function(e){e.parentNode.removeChild(e)});var t=(e.match(/\\.([\\d,-]+)$/)||[,\"\"])[1];if(t&&!document.getElementById(e)){var n=e.slice(0,e.lastIndexOf(\".\")),i=document.getElementById(n);if(i)i.hasAttribute(\"data-line\")||i.setAttribute(\"data-line\",\"\"),d(i,t,\"temporary \")(),l&&document.querySelector(\".temporary.line-highlight\").scrollIntoView()}}}();\n!function(){if(\"undefined\"!=typeof Prism&&\"undefined\"!=typeof document){var o=\"line-numbers\",a=/\\n(?!$)/g,e=Prism.plugins.lineNumbers={getLine:function(e,n){if(\"PRE\"===e.tagName&&e.classList.contains(o)){var t=e.querySelector(\".line-numbers-rows\");if(t){var i=parseInt(e.getAttribute(\"data-start\"),10)||1,r=i+(t.children.length-1);n<i&&(n=i),r<n&&(n=r);var s=n-i;return t.children[s]}}},resize:function(e){u([e])},assumeViewportIndependence:!0},n=void 0;window.addEventListener(\"resize\",function(){e.assumeViewportIndependence&&n===window.innerWidth||(n=window.innerWidth,u(Array.prototype.slice.call(document.querySelectorAll(\"pre.\"+o))))}),Prism.hooks.add(\"complete\",function(e){if(e.code){var n=e.element,t=n.parentNode;if(t&&/pre/i.test(t.nodeName)&&!n.querySelector(\".line-numbers-rows\")&&Prism.util.isActive(n,o)){n.classList.remove(o),t.classList.add(o);var i,r=e.code.match(a),s=r?r.length+1:1,l=new Array(s+1).join(\"<span></span>\");(i=document.createElement(\"span\")).setAttribute(\"aria-hidden\",\"true\"),i.className=\"line-numbers-rows\",i.innerHTML=l,t.hasAttribute(\"data-start\")&&(t.style.counterReset=\"linenumber \"+(parseInt(t.getAttribute(\"data-start\"),10)-1)),e.element.appendChild(i),u([t]),Prism.hooks.run(\"line-numbers\",e)}}}),Prism.hooks.add(\"line-numbers\",function(e){e.plugins=e.plugins||{},e.plugins.lineNumbers=!0})}function u(e){if(0!=(e=e.filter(function(e){var n=function(e){return e?window.getComputedStyle?getComputedStyle(e):e.currentStyle||null:null}(e)[\"white-space\"];return\"pre-wrap\"===n||\"pre-line\"===n})).length){var n=e.map(function(e){var n=e.querySelector(\"code\"),t=e.querySelector(\".line-numbers-rows\");if(n&&t){var i=e.querySelector(\".line-numbers-sizer\"),r=n.textContent.split(a);i||((i=document.createElement(\"span\")).className=\"line-numbers-sizer\",n.appendChild(i)),i.innerHTML=\"0\",i.style.display=\"block\";var s=i.getBoundingClientRect().height;return i.innerHTML=\"\",{element:e,lines:r,lineHeights:[],oneLinerHeight:s,sizer:i}}}).filter(Boolean);n.forEach(function(e){var i=e.sizer,n=e.lines,r=e.lineHeights,s=e.oneLinerHeight;r[n.length-1]=void 0,n.forEach(function(e,n){if(e&&1<e.length){var t=i.appendChild(document.createElement(\"span\"));t.style.display=\"block\",t.textContent=e}else r[n]=s})}),n.forEach(function(e){for(var n=e.sizer,t=e.lineHeights,i=0,r=0;r<t.length;r++)void 0===t[r]&&(t[r]=n.children[i++].getBoundingClientRect().height)}),n.forEach(function(e){var n=e.sizer,t=e.element.querySelector(\".line-numbers-rows\");n.style.display=\"none\",n.innerHTML=\"\",e.lineHeights.forEach(function(e,n){t.children[n].style.height=e+\"px\"})})}}}();","(function() {\n  const iconItems = document.querySelectorAll(\".icon-grid__item\");\n\n  iconItems.forEach((item) => {\n    const label = item.querySelector(\".icon-grid__label\");\n    const labelText = label.textContent;\n\n    item.onmouseenter = () => {\n      label.textContent = labelText;\n    };\n    \n    item.addEventListener(\"click\", () => {\n      item.onmouseleave = null;\n\n      navigator.clipboard.writeText(item.dataset.svgSnippet).then(() => {\n        label.textContent = \"Copied!\";\n\n        requestAnimationFrame(() => {\n          item.onmouseleave = () => {\n            setTimeout(() => {\n              label.textContent = labelText;\n            }, 500);\n          };\n        });\n      });\n    });\n  });\n}());"]}