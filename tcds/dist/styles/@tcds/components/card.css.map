{"version":3,"sources":["@tcds/components/card.scss","@tcds/components/card.css"],"names":[],"mappings":"AAEA,MAGE,kBAAA,OAEA,QAAA,KACA,eAAA,OACA,SAAA,SACA,MAAA,KAEA,eACE,kBAAA,MAGF,qCACE,WAAA,IAAA,MAAA,QAME,gECoJN,0EDnJQ,cAAA,QAAA,WAAA,QAGF,uDCqJN,iEDpJQ,UAAA,KAUN,aACE,MAAA,EAEA,0BACE,QAAA,MACA,OAAA,KACA,WAAA,KACA,cAAA,MAAA,WAAA,MACA,mBAAA,OAAA,gBAAA,OACA,MAAA,KACA,SAAA,OAES,gCACP,WAAA,KAaN,eACE,YAAA,2DACA,YAAA,iBAEA,YAAA,MACA,WAAA,QACA,MAAA,QACA,QAAA,KACA,eAAA,OACA,IAAA,mCACA,OAAA,KACA,MAAA,EACA,QAAA,iBAAA,iBACA,QAAA,EAES,8BACP,iBAAA,EAGO,4BACP,iBAAA,EAEA,eAGO,2FACP,YAAA,EAIJ,WACE,QAAA,MACA,UAAA,QACA,YAAA,IACA,eAAA,UAGF,aACE,UAAA,OACA,YAAA,IACA,YAAA,OAEA,eACE,MAAA,QACA,gBAAA,KAEA,uBACE,OAAA,EACA,QAAA,GACA,KAAA,EACA,SAAA,SACA,MAAA,EACA,IAAA,EAYN,YACE,YAAA,IAEA,cACE,OAAA,MACA,QAAA,KACA,SAAA,SAGO,oBACP,OAAA,EAEA,sBACE,WAAA,uBAcN,cACE,QAAA,KACA,WAAA,KACA,MAAA,KAEA,2BACE,SAAA,SAGF,sBACE,OAAA,QAEA,6BACE,QAAA,GAGO,qCACP,eACA,MAAA,QACA,YAAA,IACA,QAAA,EAGE,kDACE,QAAA,KAKG,+CACP,MAAA,KAKG,kBAAA,iCAEP,YAAA,QACA,eAAA,IAEA,+BAAA,8CACE,KAAA,EACA,UAAA,MAGF,iCAAA,gDACE,KAAA,EACA,OAAA,MAIK,mDAAA,kEAEP,UAAA,MACA,MAAA,MACA,OAAA,MACA,WAAA,MAGF,yBACE,oCACE,QAAA,MAKJ,wCAAA,2BA3NF,MA4NI,eAAA,IAEA,eACE,QAAA,KAAA,KAEA,mBACE,WAAA,KAIJ,aACE,UAAA,MAEA,iBACE,OAAA,gBAMR,sBACE,OAAA,KAEA,8BACE,WAAA","file":"card.css","sourcesContent":["@use \"../_all\" as *;\n\n.Card {\n  $this: &;\n\n  --vertical-rhythm: 1.5rem;\n\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 100%;\n\n  &--compact {\n    --vertical-rhythm: .5rem;\n  }\n\n  &--accent-divider &__content {\n    border-top: 8px solid theme-color(\"primary\");\n  }\n\n  @at-root &--horizontal.Card--contain-media,\n  .bp_2 > .Card--contain-media:not(.Card--vertical) {\n    .Card__media {\n      > :first-child {\n        object-fit: contain;\n      }\n\n      img {\n        min-width: 100%;\n      }\n    }\n  }\n\n  /**\n   * 1. We can't specify a particular element here because card media could be\n   *    an image, video, icon, palette, etc.\n   */\n  \n  &__media {\n    order: 1;\n\n    > :first-child { // 1\n      display: block;\n      height: 100%;\n      max-height: 33vh;\n      object-fit: cover;\n      object-position: center;\n      width: 100%;\n      overflow: hidden;\n\n      @at-root .bp_2 & {\n        max-height: none;\n      }\n    }\n  }\n\n  /**\n   * 1. We only want horizontal padding to apply if there is a background on the\n   *    containing element. Otherwise, we want content to be flush to the edge.\n   *    To unset the background variable, write a selector for the desired state\n   *    above the @if statement and set $background: undefined within the ruleset.\n   * 2. Adds blanket margin-top to all elements that are siblings of another element.\n   */\n  \n  &__content {\n    --padding-y: calc(var(--vertical-rhythm) * var(--padding-factor, 1.25));\n    --padding-x: var(--padding-y);\n\n    align-items: start;\n    background: color(\"gray\", \"0\");\n    color: color(\"gray\", \"400\");\n    display: flex;\n    flex-direction: column;\n    gap: calc(var(--vertical-rhythm) / 1.25);\n    height: 100%;\n    order: 2;\n    padding: var(--padding-y) var(--padding-x);\n    z-index: 1;\n\n    @at-root #{$this}--compact & {\n      --padding-factor: 3;\n    }\n\n    @at-root #{$this}--no-bg & {\n      --padding-factor: 1;\n      \n      background: none;\n    }\n\n    @at-root [data-observe-resizes]:not(.bp_2) #{$this}:not(#{$this}--horizontal) #{$this}--no-bg & {\n      --padding-x: 0;\n    }\n  }\n\n  &__tag {\n    display: block;\n    font-size: font-size(\"small\");\n    font-weight: 600;\n    text-transform: uppercase;\n  }\n\n  &__title {\n    font-size: 1.1rem;\n    font-weight: 500;\n    line-height: normal;\n\n    a {\n      color: color(\"gray\", \"400\");\n      text-decoration: none;\n\n      &::before {\n        bottom: 0;\n        content: \"\";\n        left: 0;\n        position: absolute;\n        right: 0;\n        top: 0;\n      }\n    }\n  }\n\n  /**\n   * 1. Because the whole card surface is clickable, links within the card should\n   *    have a larger click target. We add padding to do so, then a negative margin\n   *    to offset this padding while keeping the increased click surface.\n   * 2. This raises the link above the card's overall click surface.\n   */\n  \n  &__body {\n    line-height: 1.7;\n\n    a {\n      margin: -.5em; // 1\n      padding: .5em; // 1\n      position: relative; // 2\n    }\n\n    @at-root .Card .Card__body p {\n      margin: 0;\n\n      + p {\n        margin-top: var(--vertical-rhythm);\n      }\n    }\n  }\n\n  /**\n   * 1. This removes whitespace from the bottom of inline elements (such as a\n   *    link).\n   * 2. Pushes actions to the bottom.\n   * 3. We have to re-add the original top spacing via padding because [2] undid\n   *    it.\n   * 4. This raises the actions above the card's overall click surface.\n   */\n  \n  &__action {\n    display: flex; // 1\n    margin-top: auto; // 2\n    width: 100%;\n\n    &--multiaction {\n      position: relative; // 4\n    }\n\n    .Button {\n      cursor: pointer;\n\n      &:not(a) {\n        z-index: -1;\n      }\n\n      @at-root #{$this}--compact & {\n        background: none;\n        color: theme-color(\"link\");\n        font-weight: bold;\n        padding: 0;\n\n        &:hover {\n          &::after {\n            display: none;\n          }\n        }\n      }\n\n      @at-root #{$this}--full-width-button & {\n        width: 100%;\n      }\n    }\n  }\n\n  @at-root &--horizontal,\n  .bp_2 > &:not(.Card--vertical) {\n    align-items: stretch;\n    flex-direction: row;\n\n    #{$this}__media {\n      flex: 1;\n      max-width: 233px;\n    }\n\n    #{$this}__content {\n      flex: 2;\n      height: unset;\n    }\n  }\n\n  @at-root &--image-max-220#{&}--horizontal &__media,\n  .bp_2 > &:not(#{&}--vertical)#{&}--image-max-220 &__media {\n    max-width: 220px;\n    width: 220px;\n    height: 220px;\n    min-height: 220px;\n  }\n\n  @media (max-width: 375px) {\n    &.Card--horizontal &__media {\n      display: none;\n    }\n  }\n\n  /* IE 11 */\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    flex-direction: row;\n\n    &__content {\n      padding: 1rem 2rem;\n\n      > * + * {\n        margin-top: 1rem;\n      }\n    }\n\n    &__media {\n      max-width: 200px;\n\n      img {\n        height: auto !important;\n      }\n    }\n  }\n}\n\n.grid-container .Card {\n  height: 100%;\n\n  .Button {\n    margin-top: auto;\n  }\n}","/**\n * Generic mixins.\n */\n/**\n * For visually hiding an element while keeping it accessible to screen readers.\n * This mixin corresponds with the `.visually-hidden` utility class (see\n * _utilities), but can be applied to any element.\n */\n/**\n * A mixin for targeting specific browsers based off of feature or media\n * queries.\n *\n * Except in extreme circumstances, the use of this mixin is NOT recommended.\n * Instead, opt for progressive enhancement with Feature Queries, or some\n * graceful degradation strategy. This mixin is only intended to be used to\n * address specific rendering quirks or known vendor bugs that cannot be\n * addressed any other way. It should not be used to build parallel stylesheets\n * for different browsers.\n *\n * Be warned that many of these browser-sniffing techniques are unstable, as\n * they typically test for the (lack of) support of certain features that may\n * end up becoming supported in the future. In this event, the queries should be\n * changed to include the version supported, e.g. from \"safari\" to \"lte safari\n * 15\" (less-than or equal-to Safari 15).\n *\n * If this happens, conditional styles should be reassessed. If a feature\n * becomes supported in a new version of a browser, detecting that browser at\n * all may no longer be necessary. If it is still necessary, a different browser\n * detection technique will need to be added under the original query.\n *\n * Also note that in most cases, browser targeting is done with the `@supports`\n * query, which is not supported in any version of IE, Edge < 12, Firefox <= 21,\n * Chrome <= 27, Safari <= 8, or iOS Safari <= 8.4. IE 11 is detected through\n * separate means. See https://caniuse.com/css-featurequeries.\n *\n * @param {string} $browser - The name of the browser or specific query.\n *   Available options are:\n *   - \"firefox\"\n *   - \"not firefox\"\n *   - \"chromium\" (Chrome, modern Edge, etc.)\n *   - \"not chromium\"\n *   - \"sarari\" or \"any safari\" (macOS and iOS)\n *   - \"ios safari\" or \"mobile safari\"\n *   - \"macos safari\" or \"desktop safari\"\n *   - \"not safari\"\n *   - \"ie 11\" or \"gte ie 10\"\n *   - \"edge not chromium\" or \"edgehtml\" or \"lt edge 79\"\n */\n/**\n * Color dictionary.\n *\n * The following color grades use the CIELUV color model for perceptual\n * uniformity, and were generated using the HSLuv tool. Using the primary red\n * brand color (#da2530) as the starting point, all reds have 11deg hue, and all\n * base colors (grade 300) have 47.6% lightness. Most colors have 87.7%\n * saturation, except for yellow and green due to having a broader saturation\n * range (normalized by eye).\n *\n * The following hues were used to generate the other colors:\n * blue = 250\n * yellow = 78.8\n * green = 135\n * gray = 265.9\n *\n * Tints and shades of each color were generated in increments of roughly\n * 10%-20%, and indexed on a scale of 0 to 500 in increments of 100:\n * 0 = 97.5% (~100%)\n * 100 = 90%\n * 200 = 70%\n * 300: 47.6% (~50%)\n * 400: 30%\n * 500: 10%\n *\n * Any two colors are accessible together if the difference between their grades\n * is 300 or greater.\n */\n/**\n * Interface aliases are keywords used to reference colors according to the role\n * they serve in a user interface.\n */\n/**\n * Theme aliases are keywords used to reference colors according to the role\n * they serve in the theme and brand scheme. Default colors are set here, but\n * they are expected to be overridden on a site-by-site basis according to that\n * site's branding.\n */\n/**\n * Utility functions for the color system.\n */\n/**\n * A getter function for the `$colors` map (see _variables).\n */\n/**\n * A getter function for the `$interface-colors` map (see _variables).\n */\n/**\n * A getter function for the `$theme-colors` map (see _variables).\n */\n/**\n * Utility functions for the layout system.\n */\n/**\n * Animation and transition variables.\n */\n/**\n * Easing and timing variables for animations and transitions.\n *\n * \"Productive\" motion is fast and snappy, and is best used for productive user\n * tasks, or elements that only need subtle animation.\n *\n * \"Expressive\" motion is slower and smoother, and is best used to draw a user's\n * attention to a different portion of the screen from where they clicked or\n * where their focus may be.\n *\n * This map has a corresponding getter function, `animation` (see _functions).\n */\n/**\n * Utility functions for animations and transitions.\n */\n/**\n * A getter function for the `$animation-properties` map (see _variables).\n */\n/**\n * Mixins related to motion (animation or transitions).\n */\n/**\n * A media query for detecting whether a user prefers reduced motion.\n */\n/**\n * A media query for detecting whether the user has not set a motion preference.\n */\n.Card {\n  --vertical-rhythm: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 100%;\n  /**\n   * 1. We can't specify a particular element here because card media could be\n   *    an image, video, icon, palette, etc.\n   */\n  /**\n   * 1. We only want horizontal padding to apply if there is a background on the\n   *    containing element. Otherwise, we want content to be flush to the edge.\n   *    To unset the background variable, write a selector for the desired state\n   *    above the @if statement and set $background: undefined within the ruleset.\n   * 2. Adds blanket margin-top to all elements that are siblings of another element.\n   */\n  /**\n   * 1. Because the whole card surface is clickable, links within the card should\n   *    have a larger click target. We add padding to do so, then a negative margin\n   *    to offset this padding while keeping the increased click surface.\n   * 2. This raises the link above the card's overall click surface.\n   */\n  /**\n   * 1. This removes whitespace from the bottom of inline elements (such as a\n   *    link).\n   * 2. Pushes actions to the bottom.\n   * 3. We have to re-add the original top spacing via padding because [2] undid\n   *    it.\n   * 4. This raises the actions above the card's overall click surface.\n   */\n  /* IE 11 */\n}\n.Card--compact {\n  --vertical-rhythm: .5rem;\n}\n.Card--accent-divider .Card__content {\n  border-top: 8px solid #da2530;\n}\n.Card--horizontal.Card--contain-media .Card__media > :first-child,\n.bp_2 > .Card--contain-media:not(.Card--vertical) .Card__media > :first-child {\n  object-fit: contain;\n}\n.Card--horizontal.Card--contain-media .Card__media img,\n.bp_2 > .Card--contain-media:not(.Card--vertical) .Card__media img {\n  min-width: 100%;\n}\n\n.Card__media {\n  order: 1;\n}\n.Card__media > :first-child {\n  display: block;\n  height: 100%;\n  max-height: 33vh;\n  object-fit: cover;\n  object-position: center;\n  width: 100%;\n  overflow: hidden;\n}\n.bp_2 .Card__media > :first-child {\n  max-height: none;\n}\n\n.Card__content {\n  --padding-y: calc(var(--vertical-rhythm) * var(--padding-factor, 1.25));\n  --padding-x: var(--padding-y);\n  align-items: start;\n  background: #f8f8f9;\n  color: #464652;\n  display: flex;\n  flex-direction: column;\n  gap: calc(var(--vertical-rhythm) / 1.25);\n  height: 100%;\n  order: 2;\n  padding: var(--padding-y) var(--padding-x);\n  z-index: 1;\n}\n.Card--compact .Card__content {\n  --padding-factor: 3;\n}\n\n.Card--no-bg .Card__content {\n  --padding-factor: 1;\n  background: none;\n}\n\n[data-observe-resizes]:not(.bp_2) .Card:not(.Card--horizontal) .Card--no-bg .Card__content {\n  --padding-x: 0;\n}\n\n.Card__tag {\n  display: block;\n  font-size: 0.875rem;\n  font-weight: 600;\n  text-transform: uppercase;\n}\n.Card__title {\n  font-size: 1.1rem;\n  font-weight: 500;\n  line-height: normal;\n}\n.Card__title a {\n  color: #464652;\n  text-decoration: none;\n}\n.Card__title a::before {\n  bottom: 0;\n  content: \"\";\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n.Card__body {\n  line-height: 1.7;\n}\n.Card__body a {\n  margin: -0.5em;\n  padding: 0.5em;\n  position: relative;\n}\n.Card .Card__body p {\n  margin: 0;\n}\n.Card .Card__body p + p {\n  margin-top: var(--vertical-rhythm);\n}\n\n.Card__action {\n  display: flex;\n  margin-top: auto;\n  width: 100%;\n}\n.Card__action--multiaction {\n  position: relative;\n}\n.Card__action .Button {\n  cursor: pointer;\n}\n.Card__action .Button:not(a) {\n  z-index: -1;\n}\n.Card--compact .Card__action .Button {\n  background: none;\n  color: #2d73bc;\n  font-weight: bold;\n  padding: 0;\n}\n.Card--compact .Card__action .Button:hover::after {\n  display: none;\n}\n\n.Card--full-width-button .Card__action .Button {\n  width: 100%;\n}\n\n.Card--horizontal, .bp_2 > .Card:not(.Card--vertical) {\n  align-items: stretch;\n  flex-direction: row;\n}\n.Card--horizontal .Card__media, .bp_2 > .Card:not(.Card--vertical) .Card__media {\n  flex: 1;\n  max-width: 233px;\n}\n.Card--horizontal .Card__content, .bp_2 > .Card:not(.Card--vertical) .Card__content {\n  flex: 2;\n  height: unset;\n}\n\n.Card--image-max-220.Card--horizontal .Card__media, .bp_2 > .Card:not(.Card--vertical).Card--image-max-220 .Card__media {\n  max-width: 220px;\n  width: 220px;\n  height: 220px;\n  min-height: 220px;\n}\n\n@media (max-width: 375px) {\n  .Card.Card--horizontal .Card__media {\n    display: none;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .Card {\n    flex-direction: row;\n  }\n  .Card__content {\n    padding: 1rem 2rem;\n  }\n  .Card__content > * + * {\n    margin-top: 1rem;\n  }\n  .Card__media {\n    max-width: 200px;\n  }\n  .Card__media img {\n    height: auto !important;\n  }\n}\n\n.grid-container .Card {\n  height: 100%;\n}\n.grid-container .Card .Button {\n  margin-top: auto;\n}"]}