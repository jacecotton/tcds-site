{"version":3,"sources":["@tcds/base/base.scss","@tcds/base/base.css","@tcds/animation/_mixins.scss"],"names":[],"mappings":"AAcA,EACE,WAAA,WACA,OAAA,EACA,QAAA,EAEA,QAAA,SAEE,WAAA,WC0IJ,KD/HA,KAEE,QAAA,MACA,MAAA,KACA,WAAA,OACA,OAAA,KEpBA,8CDsJF,KDvIA,KAQI,gBAAA,QAQJ,KACE,yBAAA,KAAA,sBAAA,KAAA,iBAAA,KAOF,ECmIA,OACA,MACA,OACA,QACA,SDjIE,aAAA,aAQF,MCwIA,OALA,OACA,OACA,IACA,IAGA,MAFA,MD/HE,UAAA,KACA,OAAA,KACA,eAAA,OAOF,SACE,QAAA","file":"base.css","sourcesContent":["@use \"../_all\" as *;\n\n/**\n * Styles included here are commonly found in \"reset\", \"normalize\", or\n * \"preflight\" files. However, the purpose of this file is strictly to set some\n * better defaults as a starting point. It is not to eliminate or even normalize\n * differences between browsers. If a browser quirk truly does need to be\n * accounted for, it should be put in the respective file in the Design System\n * (e.g. the file for button styles should include `appearance: none`).\n *\n * 1. Better default box model (padding while now no longer add to an element's\n *    dimensions, but instead push content inwards).\n */\n\n* {\n  box-sizing: border-box; // 1\n  margin: 0;\n  padding: 0;\n\n  &::before,\n  &::after {\n    box-sizing: border-box;\n  }\n}\n\n/**\n * 1. Ensure against horizontal scrolling on smaller screens.\n * 2. `position: sticky` won't work on an element with an ancestor (like `html,\n *    body`) that has an `overflow` property but not a `height`.\n * 3. If \"reduced motion\" preference is not set, animate scrolling to anchors to\n *    better orient users as to the location and direction of a scroll change.\n */\nhtml,\nbody {\n  display: block; // 1\n  width: 100%; // 1\n  overflow-x: hidden; // 1\n  height: 100%; // 2\n\n  @include motion-ok {\n    scroll-behavior: smooth; // 3\n  }\n}\n\n/**\n * 1. Do not adjust font size on orientation change of mobile devices (i.e.,\n *    disable font zooming when changing to landscape mode).\n */\nbody {\n  text-size-adjust: 100%; // 1\n}\n\n/**\n * 1. Provide a more \"native\" feel on touch devices by removing the double-tap\n *    delay of single-tap-only elements.\n */\na,\nbutton,\ninput,\nselect,\nsummary,\ntextarea {\n  touch-action: manipulation; // 1\n}\n\n/**\n * 1. Prevent media elements from expanding beyond or stretching out the parent\n *    element.\n * 2. Remove default white space after inline elements.\n */\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo,\nbutton,\ntable {\n  max-width: 100%; // 1\n  height: auto;\n  vertical-align: middle; // 2\n}\n\n/**\n * 1. Make the `[hidden]` attribute stronger so it overrides the `display`\n *    property of the elements it's used on.\n */\n[hidden] {\n  display: none !important;\n}","/**\n * Generic mixins.\n */\n/**\n * For visually hiding an element while keeping it accessible to screen readers.\n * This mixin corresponds with the `.visually-hidden` utility class (see\n * _utilities), but can be applied to any element.\n */\n/**\n * A mixin for targeting specific browsers based off of feature or media\n * queries.\n *\n * Except in extreme circumstances, the use of this mixin is NOT recommended.\n * Instead, opt for progressive enhancement with Feature Queries, or some\n * graceful degradation strategy. This mixin is only intended to be used to\n * address specific rendering quirks or known vendor bugs that cannot be\n * addressed any other way. It should not be used to build parallel stylesheets\n * for different browsers.\n *\n * Be warned that many of these browser-sniffing techniques are unstable, as\n * they typically test for the (lack of) support of certain features that may\n * end up becoming supported in the future. In this event, the queries should be\n * changed to include the version supported, e.g. from \"safari\" to \"lte safari\n * 15\" (less-than or equal-to Safari 15).\n *\n * If this happens, conditional styles should be reassessed. If a feature\n * becomes supported in a new version of a browser, detecting that browser at\n * all may no longer be necessary. If it is still necessary, a different browser\n * detection technique will need to be added under the original query.\n *\n * Also note that in most cases, browser targeting is done with the `@supports`\n * query, which is not supported in any version of IE, Edge < 12, Firefox <= 21,\n * Chrome <= 27, Safari <= 8, or iOS Safari <= 8.4. IE 11 is detected through\n * separate means. See https://caniuse.com/css-featurequeries.\n *\n * @param {string} $browser - The name of the browser or specific query.\n *   Available options are:\n *   - \"firefox\"\n *   - \"not firefox\"\n *   - \"chromium\" (Chrome, modern Edge, etc.)\n *   - \"not chromium\"\n *   - \"sarari\" or \"any safari\" (macOS and iOS)\n *   - \"ios safari\" or \"mobile safari\"\n *   - \"macos safari\" or \"desktop safari\"\n *   - \"not safari\"\n *   - \"ie 11\" or \"gte ie 10\"\n *   - \"edge not chromium\" or \"edgehtml\" or \"lt edge 79\"\n */\n/**\n * Color dictionary.\n *\n * The following color grades use the CIELUV color model for perceptual\n * uniformity, and were generated using the HSLuv tool. Using the primary red\n * brand color (#da2530) as the starting point, all reds have 11deg hue, and all\n * base colors (grade 300) have 47.6% lightness. Most colors have 87.7%\n * saturation, except for yellow and green due to having a broader saturation\n * range (normalized by eye).\n *\n * The following hues were used to generate the other colors:\n * blue = 250\n * yellow = 78.8\n * green = 135\n * gray = 265.9\n *\n * Tints and shades of each color were generated in increments of roughly\n * 10%-20%, and indexed on a scale of 0 to 500 in increments of 100:\n * 0 = 97.5% (~100%)\n * 100 = 90%\n * 200 = 70%\n * 300: 47.6% (~50%)\n * 400: 30%\n * 500: 10%\n *\n * Any two colors are accessible together if the difference between their grades\n * is 300 or greater.\n */\n/**\n * Interface aliases are keywords used to reference colors according to the role\n * they serve in a user interface.\n */\n/**\n * Theme aliases are keywords used to reference colors according to the role\n * they serve in the theme and brand scheme. Default colors are set here, but\n * they are expected to be overridden on a site-by-site basis according to that\n * site's branding.\n */\n/**\n * Utility functions for the color system.\n */\n/**\n * A getter function for the `$colors` map (see _variables).\n */\n/**\n * A getter function for the `$interface-colors` map (see _variables).\n */\n/**\n * A getter function for the `$theme-colors` map (see _variables).\n */\n/**\n * Utility functions for the layout system.\n */\n/**\n * Animation and transition variables.\n */\n/**\n * Easing and timing variables for animations and transitions.\n *\n * \"Productive\" motion is fast and snappy, and is best used for productive user\n * tasks, or elements that only need subtle animation.\n *\n * \"Expressive\" motion is slower and smoother, and is best used to draw a user's\n * attention to a different portion of the screen from where they clicked or\n * where their focus may be.\n *\n * This map has a corresponding getter function, `animation` (see _functions).\n */\n/**\n * Utility functions for animations and transitions.\n */\n/**\n * A getter function for the `$animation-properties` map (see _variables).\n */\n/**\n * Mixins related to motion (animation or transitions).\n */\n/**\n * A media query for detecting whether a user prefers reduced motion.\n */\n/**\n * A media query for detecting whether the user has not set a motion preference.\n */\n/**\n * Styles included here are commonly found in \"reset\", \"normalize\", or\n * \"preflight\" files. However, the purpose of this file is strictly to set some\n * better defaults as a starting point. It is not to eliminate or even normalize\n * differences between browsers. If a browser quirk truly does need to be\n * accounted for, it should be put in the respective file in the Design System\n * (e.g. the file for button styles should include `appearance: none`).\n *\n * 1. Better default box model (padding while now no longer add to an element's\n *    dimensions, but instead push content inwards).\n */\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n*::before, *::after {\n  box-sizing: border-box;\n}\n\n/**\n * 1. Ensure against horizontal scrolling on smaller screens.\n * 2. `position: sticky` won't work on an element with an ancestor (like `html,\n *    body`) that has an `overflow` property but not a `height`.\n * 3. If \"reduced motion\" preference is not set, animate scrolling to anchors to\n *    better orient users as to the location and direction of a scroll change.\n */\nhtml,\nbody {\n  display: block;\n  width: 100%;\n  overflow-x: hidden;\n  height: 100%;\n}\n@media (prefers-reduced-motion: no-preference) {\n  html,\nbody {\n    scroll-behavior: smooth;\n  }\n}\n\n/**\n * 1. Do not adjust font size on orientation change of mobile devices (i.e.,\n *    disable font zooming when changing to landscape mode).\n */\nbody {\n  text-size-adjust: 100%;\n}\n\n/**\n * 1. Provide a more \"native\" feel on touch devices by removing the double-tap\n *    delay of single-tap-only elements.\n */\na,\nbutton,\ninput,\nselect,\nsummary,\ntextarea {\n  touch-action: manipulation;\n}\n\n/**\n * 1. Prevent media elements from expanding beyond or stretching out the parent\n *    element.\n * 2. Remove default white space after inline elements.\n */\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo,\nbutton,\ntable {\n  max-width: 100%;\n  height: auto;\n  vertical-align: middle;\n}\n\n/**\n * 1. Make the `[hidden]` attribute stronger so it overrides the `display`\n *    property of the elements it's used on.\n */\n[hidden] {\n  display: none !important;\n}","/**\n * Mixins related to motion (animation or transitions).\n */\n\n/**\n * A media query for detecting whether a user prefers reduced motion.\n */\n@mixin reduced-motion() {\n  @media (prefers-reduced-motion: reduce) {\n    @content;\n  }\n}\n\n/**\n * A media query for detecting whether the user has not set a motion preference.\n */\n@mixin motion-ok() {\n  @media (prefers-reduced-motion: no-preference) {\n    @content;\n  }\n}"]}