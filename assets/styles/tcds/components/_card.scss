@use "../" as *;

.Card {
  $this: &;

  --vertical-rhythm: 1.5rem;

  display: flex;
  flex-direction: column;
  position: relative;
  width: 100%;

  &--compact {
    --vertical-rhythm: .5rem;
  }

  &--accent-divider &__content {
    border-top: 8px solid theme-color("primary");
  }

  @at-root &--horizontal.Card--contain-media,
  .bp_2 > .Card--contain-media:not(.Card--vertical) {
    .Card__media {
      > :first-child {
        object-fit: contain;
      }

      img {
        min-width: 100%;
      }
    }
  }

  /**
   * 1. We can't specify a particular element here because card media could be
   *    an image, video, icon, palette, etc.
   */
  
  &__media {
    order: 1;

    > :first-child { // 1
      display: block;
      height: 100%;
      max-height: 33vh;
      object-fit: cover;
      object-position: center;
      width: 100%;
      overflow: hidden;

      @at-root .bp_2 & {
        max-height: none;
      }
    }
  }

  /**
   * 1. We only want horizontal padding to apply if there is a background on the
   *    containing element. Otherwise, we want content to be flush to the edge.
   *    To unset the background variable, write a selector for the desired state
   *    above the @if statement and set $background: undefined within the ruleset.
   * 2. Adds blanket margin-top to all elements that are siblings of another element.
   */
  
  &__content {
    --padding-y: calc(var(--vertical-rhythm) * var(--padding-factor, 1.25));
    --padding-x: var(--padding-y);

    align-items: start;
    background: color("gray", "0");
    color: color("gray", "400");
    display: flex;
    flex-direction: column;
    gap: calc(var(--vertical-rhythm) / 1.25);
    height: 100%;
    order: 2;
    padding: var(--padding-y) var(--padding-x);
    z-index: 1;

    @at-root #{$this}--compact & {
      --padding-factor: 3;
    }

    @at-root #{$this}--no-bg & {
      --padding-factor: 1;
      
      background: none;
    }

    @at-root [data-observe-resizes]:not(.bp_2) #{$this}:not(#{$this}--horizontal) #{$this}--no-bg & {
      --padding-x: 0;
    }
  }

  &__tag {
    display: block;
    font-size: font-size("small");
    font-weight: 600;
    text-transform: uppercase;
  }

  &__title {
    font-size: 1.1rem;
    font-weight: 500;
    line-height: normal;

    a {
      color: color("gray", "400");
      text-decoration: none;

      &::before {
        bottom: 0;
        content: "";
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
      }
    }
  }

  /**
   * 1. Because the whole card surface is clickable, links within the card should
   *    have a larger click target. We add padding to do so, then a negative margin
   *    to offset this padding while keeping the increased click surface.
   * 2. This raises the link above the card's overall click surface.
   */
  
  &__body {
    line-height: 1.7;

    a {
      margin: -.5em; // 1
      padding: .5em; // 1
      position: relative; // 2
    }

    @at-root .Card .Card__body p {
      margin: 0;

      + p {
        margin-top: var(--vertical-rhythm);
      }
    }
  }

  /**
   * 1. This removes whitespace from the bottom of inline elements (such as a
   *    link).
   * 2. Pushes actions to the bottom.
   * 3. We have to re-add the original top spacing via padding because [2] undid
   *    it.
   * 4. This raises the actions above the card's overall click surface.
   */
  
  &__action {
    display: flex; // 1
    margin-top: auto; // 2
    width: 100%;

    &--multiaction {
      position: relative; // 4
    }

    .Button {
      cursor: pointer;

      &:not(a) {
        z-index: -1;
      }

      @at-root #{$this}--compact & {
        background: none;
        color: theme-color("link");
        font-weight: bold;
        padding: 0;

        &:hover {
          &::after {
            display: none;
          }
        }
      }

      @at-root #{$this}--full-width-button & {
        width: 100%;
      }
    }
  }

  @at-root &--horizontal,
  .bp_2 > &:not(.Card--vertical) {
    align-items: stretch;
    flex-direction: row;

    #{$this}__media {
      flex: 1;
      max-width: 233px;
    }

    #{$this}__content {
      flex: 2;
      height: unset;
    }
  }

  @at-root &--image-max-220#{&}--horizontal &__media,
  .bp_2 > &:not(#{&}--vertical)#{&}--image-max-220 &__media {
    max-width: 220px;
    width: 220px;
    height: 220px;
    min-height: 220px;
  }

  @media (max-width: 375px) {
    &.Card--horizontal &__media {
      display: none;
    }
  }

  /* IE 11 */
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    flex-direction: row;

    &__content {
      padding: 1rem 2rem;

      > * + * {
        margin-top: 1rem;
      }
    }

    &__media {
      max-width: 200px;

      img {
        height: auto !important;
      }
    }
  }
}

.grid-container .Card {
  height: 100%;

  .Button {
    margin-top: auto;
  }
}