@use "../" as *;

.max-width-container {
  margin: 0 auto;
  width: calc(100% - space("x-loose"));
  max-width: breakpoint("x-large");
}

.row {
  display: flex;
  flex-direction: row;
}

.column {
  display: flex;
  flex-direction: column;
}

.row-wrap,
.column-wrap {
  flex-wrap: wrap;
}

@for $flex from 1 through 12 {
  .flex-#{$flex} {
    flex: $flex;
  }
}

.grid {
  display: grid;
  -ms-grid-columns: 1fr;
  grid-template-columns: repeat(var(--grid-columns, 1), minmax(var(--grid-column-min-width, 0px), 1fr));
}

.justify-space-between {
  justify-content: space-between;
}

.justify-start,
.justify-left {
  justify-content: start;
}

.justify-end,
.justify-right {
  justify-content: end;
}

.justify-center {
  justify-content: center;
}

.align-center {
  align-items: center;
}

.align-start,
.align-top {
  align-items: start;
}

.align-end,
.align-bottom {
  align-items: end;
}

.float-left {
  margin: 0 auto space("loose");

  @include breakpoint-above("small") {
    float: left;
    margin: 0 space("loose") space("loose") 0;
  }
}

.float-right {
  margin: 0 auto space("loose");

  @include breakpoint-above("small") {
    float: right;
    margin: 0 0 space("loose") space("loose");
  }
}

@each $space, $value in $spaces {
  .gap-#{$space} {
    gap: $value;
  }

  .row-gap-#{$space} {
    row-gap: $value;
  }

  .column-gap-#{$space} {
    column-gap: $value;
  }
}

@each $breakpoint, $value in $breakpoints {
  @include breakpoint-below($breakpoint) {
    .hide-below-#{$breakpoint} {
      display: none !important;
    }
  }

  @include breakpoint-above($breakpoint) {
    .hide-above-#{$breakpoint} {
      display: none !important;
    }
  }
}